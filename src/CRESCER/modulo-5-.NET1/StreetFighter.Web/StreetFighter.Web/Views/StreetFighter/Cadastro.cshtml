@model StreetFighter.Web.Models.CadastroModel
@{
    ViewBag.Title = "Cadastro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <style>
        .field-validation-error {
            color: #a94442;
        }
        .menu {
            background: rgba(171, 163, 163, 0.6);
            color: white;
            width: 550px;
            padding: 20px;
            margin: 250px auto;
            margin-bottom: 80px;
            border: 1px solid white;
            border-radius: 10px;
        }
            .menu a {
                color: white;
                text-decoration: none;
            }

            .menu span {
                padding: 32px;
            }

        .container {
            background: #EDEDED;
            width: 650px;
            padding-left: 0px;
            padding-right: 0px;
        }

          .container > div:first-child {
                padding: 30px;
                overflow-y: auto;
            }

        .faixa {
            background: #444444;
            color: #EDEDED;
            padding: 30px;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="faixa">
            <strong>Cadastro de personagem</strong>
        </div>
        <div>
            @using (Html.BeginForm("Salvar", "StreetFighter", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Nome, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Nome)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataNascimento, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.DataNascimento, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DataNascimento)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrimeiraAparicao, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.PrimeiraAparicao, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PrimeiraAparicao)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Altura, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Altura, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Altura)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Peso, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Peso, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Peso)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Origem, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.Origem, (IEnumerable<SelectListItem>)ViewBag.Paises, "Selecione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Origem)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GolpesEspeciais, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.GolpesEspeciais, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GolpesEspeciais)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Imagem, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Imagem, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Imagem)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PersonagemOculto, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.CheckBoxFor(model => model.PersonagemOculto, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PersonagemOculto)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <button type="submit" class="btn btn-default">Salvar</button>
                    </div>
                </div>
            }
        </div>
    </div>


    @* <h2>Cadastro de personagens</h2>

        <hr />

        @using (Html.BeginForm("Salvar", "StreetFighter", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Nome, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Nome, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Nome)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataNascimento, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.DataNascimento, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DataNascimento)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrimeiraAparicao, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.PrimeiraAparicao, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PrimeiraAparicao)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Altura, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Altura, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Altura)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Peso, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Peso, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Peso)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Origem, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Origem, (IEnumerable<SelectListItem>)ViewBag.Paises, "Selecione...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Origem)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GolpesEspeciais, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.GolpesEspeciais, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GolpesEspeciais)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Imagem, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Imagem, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Imagem)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PersonagemOculto, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.CheckBoxFor(model => model.PersonagemOculto, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PersonagemOculto)
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-default">Salvar</button>
                </div>
            </div>
        }*@

    <script src="~/Scripts/jquery-1.9.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    <script type="text/javascript">
        $.validator.methods.number = function (value, element) {
            var regex = /^(\d*)(\,\d{1,2})?$/; //99999,99
            return this.optional(element) || regex.test(value);
        }

        $.validator.methods.date = function (value, element) {
            var date = new Date(value.replace(/(\d{2})[/](\d{2})[/](\d{4})/, "$2/$1/$3")); //31/12/2016
            return this.optional(element) || !/Invalid|NaN/.test(date.toString());
        }
    </script>

</body>
</html>
